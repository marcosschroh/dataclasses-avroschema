[tool.poetry]
name = "dataclasses-avroschema"
version = "0.65.7"
description = "Generate Avro Schemas from Python classes. Serialize/Deserialize python instances with avro schemas"
authors = ["Marcos Schroh <schrohm@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "dataclasses_avroschema"}]

classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development",
]

[tool.poetry.dependencies]
python = "^3.9"
fastavro = "^1.7.3"
dacite = "^1.8.0"
faker = {version = ">=26.0.0,<31.0.0", optional = true}
faust-streaming = {version = ">=0.10.11,<0.12.0", optional = true}
casefy = ">=0.1.7,<1.1.0"
typing-extensions = "^4.2.0"
pydantic = {version = "^2.4.2", optional = true, extras = ["email"]}
python-dateutil = "^2.7"
dc-avro = {version =">=0.6.4", optional = true}
inflection = "^0.5.1"

[tool.poetry.group.dev.dependencies]
mypy = "^1.8.0"
ruff = ">=0.5.0,<0.10"
pytest = ">=7,<9"
pytest-cov = ">=4,<7"
time-machine = ">=2,<3"
tzdata = "*"
types-pytz = ">=2023,<2025"
types-python-dateutil = "^2.9.0.20240316"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1"
mkdocs-material = "^9"
mkdocstrings = {version = ">=0.24,<0.28", extras = ["python"]}
mktestdocs = "^0.2.2"

[tool.poetry.group.ci-publish.dependencies]
commitizen = "^3.2.2"

[tool.poetry.extras]
pydantic = [
    "pydantic",
]
faust = [
    "faust-streaming",
]
faker = [
    "faker"
]
cli = [
    "dc-avro"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
check_untyped_defs  = true

[[tool.mypy.overrides]]
module = "stringcase.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "inflector.*"
ignore_missing_imports = true

[tool.ruff]
line-length = 120

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint]
select = [
    # pycodestyle"
    "E4",
    "E7",
    "E9",
    "E501",
    # Pyflakes
    "F",
    # isort
    "I001"
]
ignore = ["E402"]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.extend-per-file-ignores]
"tests/schemas/test_schema.py" = ["E501"]
"tests/model_generator/test_model_generator.py" = ["E501"]

[tool.commitizen]
version = "0.65.7"
tag_format = "$version"
version_files = [
    "pyproject.toml:version",
]
update_changelog_on_bump = true
major_version_zero = true
